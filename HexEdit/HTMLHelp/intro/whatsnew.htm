<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>Whats New</title>

<!--(Meta)==========================================================-->

<meta http-equiv=content-type content="text/html; charset=windows-1252">
<meta name=copyright value="1999-2001 Expert Commercial Software">
<meta name=date content="09 22, 2002 11:16:37 AM">
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=3398>
<meta name=layout-width content=988>


<!--(Links)=========================================================-->

<link rel="StyleSheet" href="..\Hexedit.css">



</head>

<!--(Body)==========================================================-->


<body>

<!--(Generated Script Links)========================================-->
<!--(Generated Code)================================================-->
<!--(WARNING: DO NOT EDIT OR DELETE THIS SECTION!)==================-->
<!--begin!kadov{{===================================================-->
<script type="text/javascript"
		language=JavaScript1.2
		x-save-method=compute-relative
		src="../ehlpdhtm.js"></script>
<script type="text/javascript"
		language=JavaScript1.2>
<!-- 
if( typeof( kadovFilePopupInit ) != 'function' ) kadovFilePopupInit = new Function();if( typeof( kadovTextPopupInit ) != 'function' ) kadovTextPopupInit = new Function();
 //-->
</script>

<!--}}end!kadov=====================================================-->
<!--(==============================================================)-->


<!--(Resources)=====================================================-->
<!--(Generated Code)================================================-->
<!--(WARNING: DO NOT EDIT OR DELETE THIS SECTION!)==================-->

<div class=x-popup-text id=POPUP45089999 style='display: none; position: absolute' >
<!--kadov-resources-begin{{-->
<ul style="list-style: disc;"
	type=disc>
	
	<li class=kadov-p><p>Aerial view</p></li>
	
	<ul style="list-style: disc;"
		type=disc>
		
		<li class=kadov-p><p>A</p></li>
	</ul>
	
	<li class=kadov-p><p>B</p></li>
</ul>
<!--}}kadov-resources-end-->
</div>

<div class=x-popup-text id=POPUP44937424 style='display: none; position: absolute' >
<!--kadov-resources-begin{{-->
<ul style="list-style: disc;"
	type=disc>
	
	<li class=kadov-p><p>N</p></li>
</ul>

<p style="margin-left: 80px;">&nbsp;</p>
<!--}}kadov-resources-end-->
</div>

<!--(End Resources)=================================================-->


<p style="margin-top: 0; margin-bottom: 0;">When Aerial View is turned 
 on (or a file is opened and Aerial View mode is on by default) HexEdit 
 prepares a bitmap (ie, graphical image) of the file where each byte (or 
 group of bytes for very large files) is represented by one pixel. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->This 
 happens in the background (ie in a low-priority background thread) so 
 will not affect anything else you want to do with the file.</p>

<p class=footnote-text
	style="margin-top: 0; margin-bottom: 0;">&nbsp;</p>

<p>Version 3.5 adds ...</p>

<p style="margin-top: 0; margin-bottom: 0;">&nbsp;</p>

<p style="margin-top: 0; margin-bottom: 0;">There are several abilities 
 of the aerial view window that make it very useful. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->First 
 you can zoom in and out on the view to see more detail, using Ctrl+mouse 
 wheel as usual or using the context menu items. If the bitmap is too large 
 to display then you can also scroll up and down using the scrollbar or 
 the mouse wheel.</p>

<p style="margin-top: 0; margin-bottom: 0;">&nbsp;</p>

<p style="font-weight: bold;"><span style="font-weight: bold;">Colors</span></p>

<p>&nbsp;</p>

<p>TBD</p>

<p>&nbsp;</p>

<p>If you know nothing at all about the data then using the &quot;rainbow&quot; 
 color scheme that comes with HexEdit is a good way to see the spread of 
 byte values. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->With 
 practice you will learn to recognize what different patterns indicate. 
 <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->Also changing 
 the width of the aerial view window can reveal new patterns by allowing 
 different pixels to come into alignment</p>

<p>&nbsp;</p>

<p style="margin-top: 0;
			margin-bottom: 0;
			font-weight: bold;">Selection etc</p>

<p style="margin-top: 0; margin-bottom: 0;">&nbsp;</p>

<p>The Aerial View is also very useful for working with a file in other 
 ways since it shows information about the selection, bookmarks, highlighted 
 bytes, search occurrences. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->You 
 can see them in the aerial view as &quot;marching ants&quot; and or in 
 the left margin.</p>

<p>&nbsp;</p>

<p>For example, imagine you have performed a search and the search occurrences 
 pane of the status bar informs you that there are thousands of occurrences 
 of the search text. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->If 
 you want to get an overview of where throughout the file these occurrences 
 are you can simply inspect the aerial view and looking for searches occurrences 
 shown as marching ants and/or in the left margin in the current search 
 color (green by default)).</p>

<p>&nbsp;</p>

<p>Marching ants and the left margin indicators can be shown individually 
 for each of:</p>

<p>&nbsp;</p>

<p>1. selection - shown in black and white</p>

<p>2. the mark - cyan in default color scheme</p>

<p>3. <a HREF="../overviewtools/Bookmarks.htm">bookmarks</a> - blue in 
 default color scheme</p>

<p>4. highlighted bytes - normally yellow</p>

<p>5. background search occurrences - green</p>

<p>&nbsp;</p>

<p>To turn on/off these options use the context menu by right-clicking 
 anywhere in the aerial view window.</p>

<p style="margin-top: 0; margin-bottom: 0;">&nbsp;</p>

<p style="margin-top: 0; margin-bottom: 0;">&nbsp;</p>

<h3><span style="font-weight: bold;">User Interface</span></h3>

<p style="margin-top: 0; margin-bottom: 0;">&nbsp;</p>

<p style="font-weight: bold;">New Toolbar Buttons</p>

<p style="font-weight: bold;">&nbsp;</p>

<p>All toolbar and menu icons have been recast in much more appealing shaded 
 images. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->Most 
 of the images are simply improved versions of the older ones, so you should 
 recognize them. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->However, 
 we took the opportunity to redesign the following ones:</p>

<p style="margin-top: 0; margin-bottom: 0;">&nbsp;</p>

<p style="margin-top: 0; margin-bottom: 0;"><img src="../cmd_edit/markup.gif"
												style="border-style: none;
														border: none;
														width: 24px;
														height: 23px;"
												width=24
												height=23
												border=0> <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->Buttons 
 involving <span style="font-weight: bold;">the mark</span> use this flag 
 image.</p>

<p style="margin-top: 0; margin-bottom: 0;">&nbsp;</p>

<p style="margin-top: 0; margin-bottom: 0;"><img src="../cmd_misc/bmtoggle.gif"
												style="border-style: none;
														border: none;
														width: 22px;
														height: 23px;"
												width=22
												height=23
												border=0> <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->Buttons 
 involving bookmarks use this flag image.</p>

<p style="margin-top: 0; margin-bottom: 0;">&nbsp;</p>

<p style="margin-top: 0; margin-bottom: 0;">The buttons that change the 
 different display modes (in the data window) have always been really bad. 
 <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->Here are 
 the new ones:</p>

<p style="margin-top: 0; margin-bottom: 0;">&nbsp;</p>

<p style="margin-top: 0; margin-bottom: 0;"><img src="../cmd_view/hexarea.gif"
												style="border-style: none;
														border: none;
														width: 22px;
														height: 23px;"
												width=22
												height=23
												border=0> <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->Display 
 hex area only.</p>

<p style="margin-top: 0; margin-bottom: 0;">&nbsp;</p>

<p style="margin-top: 0; margin-bottom: 0;"><img src="../cmd_view/chararea.gif"
												style="border-style: none;
														border: none;
														width: 22px;
														height: 23px;"
												width=22
												height=23
												border=0> <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->Display 
 the character area only.</p>

<p style="margin-top: 0; margin-bottom: 0;">&nbsp;</p>

<p style="margin-top: 0; margin-bottom: 0;"><img src="../cmd_view/botharea.gif"
												style="border-style: none;
														border: none;
														width: 22px;
														height: 23px;"
												width=22
												height=23
												border=0> <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->Display 
 both the hex and character areas.</p>

<p style="margin-top: 0; margin-bottom: 0;">&nbsp;</p>

<p style="margin-top: 0; margin-bottom: 0;"><img src="../cmd_view/stacked.gif"
												style="border-style: none;
														border: none;
														width: 22px;
														height: 23px;"
												width=22
												height=23
												border=0> <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->Display 
 the character and hex data stacked vertically.</p>

<p style="margin-top: 0; margin-bottom: 0;">&nbsp;</p>

<p style="margin-top: 0; margin-bottom: 0;">Endianness determines the byte 
 order of certain operations. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->This 
 is used for commands in the <!--kadov_tag{{<spaces>}}-->&nbsp;<a HREF="../menus/menu_operations.htm"><!--kadov_tag{{</spaces>}}-->Operations 
 Menu</a> and also in the <a HREF="../overviewtools/calc.htm">Calculator</a>. 
 <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->The following 
 buttons are used to set the byte order (you can also change it in the 
 calculator and by double-clicking the endianness pane in the status bar).</p>

<p style="margin-top: 0; margin-bottom: 0;">&nbsp;</p>

<p><img src="../cmd_operations/LittleEndian.gif"
		style="border-style: none;
				border: none;
				width: 22px;
				height: 23px;"
		width=22
		height=23
		border=0> <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->This 
 button turns on little-endian byte order (default).</p>

<p>&nbsp;</p>

<p><img src="../cmd_operations/BigEndian.gif"
		style="border-style: none;
				border: none;
				width: 22px;
				height: 23px;"
		width=22
		height=23
		border=0> <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->This 
 button turns on big-endian byte order.</p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<h3><span style="font-weight: bold;">Templates</span></h3>

<p style="margin-top: 0; margin-bottom: 0;">&nbsp;</p>

<p style="margin-top: 0; margin-bottom: 0;">There have been no major changes 
 to templates in this release as nobody has asked for any new features 
 (apart from floating templates - see below).</p>

<p style="margin-top: 0; margin-bottom: 0;">&nbsp;</p>

<p style="margin-top: 0; margin-bottom: 0;">Several users have discovered 
 the incredible power of the C/C++ parser. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->One 
 of our users has reported parsing dozens of C structs used for old file 
 formats each of which had hundreds of members without any problems. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->However, 
 there have been a few reported problems with parsing of some non-standard 
 extensions to the C language.</p>

<p style="margin-top: 0; margin-bottom: 0;">&nbsp;</p>

<p style="font-weight: bold;">Parsing of C/C++ Bit-fields</p>

<p>&nbsp;</p>

<p>The standard C language only allows for bit-fields to be declared with 
 a type of int (signed or unsigned). <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->Moreover, 
 it is at the discretion of the compiler about the size of the bit-field 
 &quot;storage unit&quot;, although it is invariably the same size as an 
 int for conformant code (ie, int bit-fields) for all compilers that I 
 am aware of. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->The 
 bit-field storage units determines the largest number of bits that can 
 be grouped together in the same &quot;integer&quot; before a new storage 
 unit is begin. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->In 
 HexEdit the bit-field storage unit can be configured to you compiler by 
 changing the &quot;len&quot; attribute of the &quot;bit-field$&quot; element 
 in standard_types_.xml. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->In 
 Microsoft's 32-bit compiler the bit-field storage unit has always been 
 4 bytes (the same size as int and size_t).</p>

<p>&nbsp;</p>

<p>However an extension implemented by most C and C++ compilers is to allow 
 control of the size of the bit-field storage unit using the &quot;base&quot; 
 type of the bit-field declaration. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->For 
 example:</p>

<p>&nbsp;</p>

<p>struct</p>

<p>{</p>

<p><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->char 
 c: 1;</p>

<p><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->char 
 d: 2;</p>

<p><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->short 
 e: 1;</p>

<p>} a;</p>

<p>&nbsp;</p>

<p>Most compilers would use a storage unit of 1 for the bit-fields c and 
 d above since their &quot;base&quot; type is char which is always one 
 byte in size. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->Then 
 they would place e in a separate storage unit of 2 bytes (assuming a short 
 is 2 bytes in length which it always is). <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->If 
 alignment was 1 (ie #pragma pack(1) was in effect) this would result in 
 a struct of length 3 bytes with c and d in the first byte and e placed 
 in the bottom (or top) bit of the next 2 bytes.</p>

<p>&nbsp;</p>

<p>In contrast the HexEdit parser will use the same bit-field storage unit 
 for all the above bit-fields and put them together in the one unit. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->Assuming 
 a storage unit of 4 this means the struct would have a total size of 4 
 bytes.</p>

<p>&nbsp;</p>

<p>HexEdit now has an option that implements the first behaviour. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->So 
 the size of a bit-field storage unit depends on the &quot;base&quot; type 
 of the bit-field, which is obtained from the relevant element (&quot;char&quot;, 
 &quot;long&quot; etc) of standard_types_.xml. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->Note 
 that if this option is used then the &quot;len&quot; attribute of the 
 &quot;bit-field$&quot; element is ignored.</p>

<p>&nbsp;</p>

<p style="font-weight: bold;">Parsing of Anonymous Structs and Unions</p>

<p>&nbsp;</p>

<p>If a struct or union is not followed by a name then the HexEdit parser 
 (in 3.4) ignores it (except that it may declare a new type that can be 
 used later). <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->For 
 example, parsing the following struct generates nothing in HexEdit 3.4 
 since the inner struct is anonymous:</p>

<p>&nbsp;</p>

<p>struct</p>

<p>{</p>

<p><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->struct</p>

<p><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->{</p>

<p><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->int 
 b;</p>

<p><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->};</p>

<p>} a;</p>

<p>&nbsp;</p>

<p>However, many compilers allow anonymous structs and unions so HexEdit 
 (3.5) now allows this. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->The 
 above would generate a STRUCT element called &quot;a&quot; containing 
 an STRUCT (wuth an empty name) containing a single DATA element called 
 &quot;b&quot;.</p>

<p>&nbsp;</p>

<p style="font-weight: bold;">Floating templates</p>

<p>&nbsp;</p>

<p>Users have found HexEdit templates to be great for looking at the format 
 of a complete file or parts of a file at fixed offsets. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->However, 
 some file formats have data structures that do not occur at a known or 
 predictable offset. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->Also 
 sometimes you just want a template that can quickly analyze a small part 
 of a file</p>

<p>&nbsp;</p>

<p>As an example I had to recently analyze some .QDX format files. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->These 
 were typically large files with fixed length records containing the same 
 data structure (or variations of it). <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->I 
 created a template with a STRUCT for the fixed length data structure then 
 enclosed it in a FOR which repeated to end of file. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->This 
 worked very well but for large files it was necessary to increase the 
 &quot;Number of fixed array elements&quot; parameter (see <a HREF="../dlg_options/HIDD_OPT_TEMPLATE.htm">Template 
 Options</a>) to be able to inspect all the records - but when this value 
 was made large the template became very slow to display initially.</p>

<p>&nbsp;</p>

<p>What was needed was a way to use a template to display a single record 
 at a time. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->In 
 fact several people have requested this ability.</p>

<p>&nbsp;</p>

<p>To this end I have added an a new &quot;floating&quot; template facility. 
 <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->This was 
 simply achieved with the addition of a predefined value called &quot;cursor&quot; 
 which can be used in template expressions. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->This 
 represents the current cursor position in the file (similar to &quot;cursor&quot; 
 pre-defined value in <a HREF="../dlg_options/HIDD_OPT_TIPS.htm">Info Tips</a>). 
 <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->There is 
 also a predefined &quot;mark&quot; value which is the position in the 
 file of the mark.</p>

<p>&nbsp;</p>

<p><img src="../ex_red_sm.jpg"
		style="border-style: none;
				border: none;
				width: 17px;
				height: 20px;"
		width=17
		height=20
		border=0> If you have more than one window open on the same file 
 these values are taken from the current cursor and mark positions of the 
 most recently active window.</p>

<p>&nbsp;</p>

<p>To create an use a floating template is then simply a matter of:</p>

<p>&nbsp;</p>

<p>1. Create a new template and add a STRUCT (or whatever) to decode the 
 relevant bytes.</p>

<p>2. At the start of the template before the above STRUCT and a DATA element 
 with attributes of <span style="font-weight: bold;">type</span>=&quot;none 
 and <span style="font-weight: bold;">len</span>=&quot;cursor&quot; (or 
 <span style="font-weight: bold;">len</span>=&quot;mark&quot;)</p>

<p>3. To use the template just position the cursor (or mark) at the start 
 of the bytes to be decoded and click the refresh the template display 
 (eg using the 3rd button on the <span style="font-weight: bold;">Navigation</span> 
 toolbar)</p>

<p>&nbsp;</p>

<p>In this way the template can quickly skip over the irrelevant byte (as 
 part of the &quot;none&quot; data element). <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->If 
 you don't give this data element a name then when you turn of template 
 &quot;design&quot; mode the skipped bytes will not even be displayed in 
 the template view.</p>

<p>&nbsp;</p>

<p>To view another part of the file it is simply a matter of moving the 
 cursor (or mark) and clicking refresh to redisplay the floating template 
 at the new address.</p>

<p>&nbsp;</p>

<p style="font-weight: bold;"><span style="font-weight: bold;">New Included 
 templates</span></p>

<p>&nbsp;</p>

<p>Several excellent new templates have been provided by a HexEdit user 
 (thanks XTAL256!) and uploaded to our forums. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->These 
 were for .PNG, .ANI, .ICO, .MID (midi), .MP3, .CLASS (Java VM class).</p>

<p>&nbsp;</p>

<p>Also &quot;DWebb&quot; created a basic .PNG template (thanks). <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->I 
 have also created an IFF (ILBM) template and updated support for .NET 
 CLR information in the PE (.EXE/.DLL) template.</p>

<p>&nbsp;</p>

<p>These new templates are all include with the HexEdit 3.5 distribution.</p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<h3><span style="font-weight: bold;">Miscellaneous</span></h3>

<p style="margin-top: 0; margin-bottom: 0;">&nbsp;</p>

<p style="margin-top: 0; margin-bottom: 0;">In addition, there were a few 
 small fixes and improvements plus some additions to the Options dialog.</p>

<p style="margin-top: 0; margin-bottom: 0;">&nbsp;</p>

<p style="font-weight: bold;"><span style="font-weight: bold;">Improvements</span></p>

<p style="margin-top: 0; margin-bottom: 0;">&nbsp;</p>

<p style="margin-top: 0; margin-bottom: 0;">The offset &quot;handle&quot; 
 on the ruler can now be dragged to the left of zero to get &quot;wrap-around&quot; 
 offsets starting at the maximum (row size).</p>

<p style="margin-top: 0; margin-bottom: 0;">&nbsp;</p>

<p style="margin-top: 0; margin-bottom: 0;">Jumping to hex or decimal addresses 
 in the calculator now adds to the hex and decimal tool history lists.</p>

<p style="margin-top: 0; margin-bottom: 0;">&nbsp;</p>

<p style="margin-top: 0; margin-bottom: 0;">If Info Tip window gets in 
 the way just press the Ctrl key to make it disappear (as in many other 
 Windows applications).</p>

<p style="margin-top: 0; margin-bottom: 0;">&nbsp;</p>

<p style="margin-top: 0; margin-bottom: 0;">Etc.</p>

<p style="margin-top: 0; margin-bottom: 0;">&nbsp;</p>

<p style="font-weight: bold;">Options</p>

<p style="font-weight: bold;">&nbsp;</p>

<p style="margin-top: 0; margin-bottom: 0;">The <a href="../dlg_options/Document_General_Options.htm">General 
 Window Options page</a> now has options for how the Template View and 
 the new <span style="font-weight: bold;">Aerial View</span> are shown 
 - whether in a split window or a tabbed window or not shown at all. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->In 
 addition you can save these settings to be used as defaults for new files 
 or files never opened before using the <span style="font-weight: bold;">Save 
 As Defaults</span> button in the <span style="font-weight: bold;">Window 
 General</span> page of the <span style="font-weight: bold;">Options</span> 
 dialog.</p>

<p style="margin-top: 0; margin-bottom: 0;">&nbsp;</p>

<p style="margin-top: 0; margin-bottom: 0;">The default color scheme can 
 now be set also using the <span style="font-weight: bold;">Save As Defaults</span> 
 button in the <span style="font-weight: bold;">Window General</span> page 
 of the <span style="font-weight: bold;">Options</span> dialog.</p>

<p style="margin-top: 0; margin-bottom: 0;">&nbsp;</p>

<p style="font-weight: bold;">Technical Changes</p>

<p style="font-weight: bold;">&nbsp;</p>

<p style="margin-top: 0; margin-bottom: 0;">On the technical side HexEdit 
 3.5 now uses the open source <span style="font-weight: bold;">FreeImage</span> 
 library. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->The 
 main use of FreeImage was for implementing the <span style="font-weight: bold;">Aerial 
 View</span> facility, but it is also used in other areas such as drawing 
 the background image in the main HexEdit window, the About box etc.</p>

<p style="margin-top: 0; margin-bottom: 0;">&nbsp;</p>

</body>

</html>
